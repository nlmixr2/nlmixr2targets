% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_nlmixr.R
\name{tar_nlmixr}
\alias{tar_nlmixr}
\title{Generate a set of targets for nlmixr estimation}
\usage{
tar_nlmixr(
  name,
  object,
  data,
  est = NULL,
  control = list(),
  table = nlmixr::tableControl()
)
}
\arguments{
\item{name}{Symbol, name of the target. Subsequent targets
can refer to this name symbolically to induce a dependency relationship:
e.g. \code{tar_target(downstream_target, f(upstream_target))} is a
target named \code{downstream_target} which depends on a target
\code{upstream_target} and a function \code{f()}. In addition, a target's
name determines its random number generator seed. In this way,
each target runs with a reproducible seed so someone else
running the same pipeline should get the same results,
and no two targets in the same pipeline share the same seed.
(Even dynamic branches have different names and thus different seeds.)
You can recover the seed of a completed target
with \code{tar_meta(your_target, seed)} and run \code{set.seed()} on the result
to locally recreate the target's initial RNG state.}

\item{object}{Fitted object or function specifying the model.}

\item{data}{Dataset to estimate.  Needs to be RxODE compatible (see
\url{https://nlmixrdevelopment.github.io/RxODE/articles/RxODE-event-types.html}
for detailed dataset requirements).}

\item{est}{Estimation method}

\item{control}{Estimation control options.  They could be
\code{\link[nlme]{nlmeControl}}, \code{\link[nlmixr]{saemControl}} or
\code{\link[nlmixr]{foceiControl}}}

\item{table}{A list controlling the table options (i.e. CWRES, NPDE etc).
See \code{\link[nlmixr]{tableControl}}.}
}
\value{
A list of targets for the model simplification, data simplification,
and model estimation.
}
\description{
The targets generated will include the \code{name} as the final estimation
step, \code{paste(name, "object_simple", sep="_tar_")} (e.g.
"pheno_tar_object_simple") as the simplified model object, and
\code{paste(name, "data_simple", sep="_tar_")} (e.g. "pheno_tar_data_simple")
as the simplified data object.
}
\details{
For the way that the objects are simplified, see
\code{\link{nlmixr_object_simplify}()} and
\code{\link{nlmixr_data_simplify}()}.
}
\examples{
\dontrun{
library(targets)
targets::tar_script({
pheno <- function() {
  ini({
    tcl <- log(0.008) # typical value of clearance
    tv <-  log(0.6)   # typical value of volume
    ## var(eta.cl)
    eta.cl + eta.v ~ c(1,
                       0.01, 1) ## cov(eta.cl, eta.v), var(eta.v)
    # interindividual variability on clearance and volume
    add.err <- 0.1    # residual variability
  })
  model({
    cl <- exp(tcl + eta.cl) # individual value of clearance
    v <- exp(tv + eta.v)    # individual value of volume
    ke <- cl / v            # elimination rate constant
    d/dt(A1) = - ke * A1    # model differential equation
    cp = A1 / v             # concentration in plasma
    cp ~ add(add.err)       # define error model
  })
}
list(
  tar_nlmixr(name=pheno_model, object=pheno, data=nlmixr::pheno_sd, est="saem")
)
})
tar_make()
}
}
