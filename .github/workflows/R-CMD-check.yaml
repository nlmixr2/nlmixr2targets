# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Install X11 dependencies on MacOS
        if: runner.os == 'macOS'
        run: brew install --cask xquartz
        shell: bash

      - name: Install deps on MacOS
        if: runner.os == 'macOS'
        run: |
          brew install cairo
          brew install libgit2
          brew install udunits
        shell: bash

      - name: Link gfortran on MacOS
        if: runner.os == 'macOS'
        run: |
          sudo ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/gfortran-10 /usr/local/gfortran
        shell: bash

      - name: Create Makevars for Fortran linking options on macOS
        if: runner.os == 'macOS'
        run: |
          try(dir.create("~/.R"))
          writeLines(c("GCCBASE:=$(shell brew --prefix gcc)","FLIBS=-L$(GCCBASE)/lib/gcc/10/lib -lm",""),"~/.R/Makevars")
        shell: Rscript {0}

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install Symengine from source for MacOS
        if: runner.os == 'macOS'
        run: install.packages("symengine", type="source")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
